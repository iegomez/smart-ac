{
  "swagger": "2.0",
  "info": {
    "title": "datum.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/data": {
      "get": {
        "summary": "List returns the available data.",
        "operationId": "List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiListDataResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "Max amount of data to retrieve.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "offset",
            "description": "Offset for retrieving data.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "startDate",
            "description": "Start date.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "description": "End date.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filters",
            "description": "Filters is an array of sensor types. Valid values are: temperature, carbon_monoxide, air_humidity, health_status.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "DatumService"
        ]
      },
      "post": {
        "summary": "Create creates the given datum.",
        "operationId": "Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiCreateDataRequest"
            }
          }
        ],
        "tags": [
          "DatumService"
        ]
      }
    },
    "/api/data/{id}": {
      "get": {
        "summary": "Get returns the datum matching the given id.",
        "operationId": "Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetDatumResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "The datum's id.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "DatumService"
        ]
      },
      "delete": {
        "summary": "Delete deletes the datum matching the given id.",
        "operationId": "Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "The datum's id.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "DatumService"
        ]
      }
    },
    "/api/devices/{device_id}/data": {
      "get": {
        "summary": "ListForDevice returns the available data for a given device id.",
        "operationId": "ListForDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiListDataResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "limit",
            "description": "Max amount of data to retrieve.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "offset",
            "description": "Offset for retrieving data.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "startDate",
            "description": "Start date.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "description": "End date.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filters",
            "description": "Filters is an array of values to request. Valid values are: temperature, carbon_monoxide, air_humidity, health_status.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "DatumService"
        ]
      }
    },
    "/api/devices/{serial_number}/data-by-serial": {
      "get": {
        "summary": "ListForDeviceBySerialNumber returns the available data for a given device serial number.",
        "operationId": "ListForDeviceBySerialNumber",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiListDataResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "serial_number",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Max amount of data to retrieve.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "offset",
            "description": "Offset for retrieving data.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "startDate",
            "description": "Start date.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "description": "End date.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filters",
            "description": "Filters is an array of values to request. Valid values are: temperature, carbon_monoxide, air_humidity, health_status.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "DatumService"
        ]
      }
    }
  },
  "definitions": {
    "apiCreateDataRequest": {
      "type": "object",
      "properties": {
        "serialNumber": {
          "type": "string",
          "description": "Device's serial number."
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiDatum"
          },
          "description": "Array of data."
        }
      },
      "description": "To create data a device must send a request with it's serial number and the array of data."
    },
    "apiDatum": {
      "type": "object",
      "properties": {
        "sensorType": {
          "type": "string",
          "description": "Sensor type."
        },
        "val": {
          "type": "number",
          "format": "double",
          "description": "Numeric value."
        },
        "strVal": {
          "type": "string",
          "description": "Stirng value."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Datum's timestamp."
        }
      },
      "description": "How a datum sent by a device looks like."
    },
    "apiGetDatumResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "description": "Datum ID."
        },
        "deviceID": {
          "type": "string",
          "format": "int64",
          "description": "Device ID."
        },
        "sensorType": {
          "type": "string",
          "description": "Sensor type."
        },
        "val": {
          "type": "number",
          "format": "double",
          "description": "Numeric value."
        },
        "strVal": {
          "type": "string",
          "description": "Stirng value."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Datum's timestamp."
        },
        "serialNumber": {
          "type": "string",
          "description": "The device's serial number."
        }
      },
      "description": "How a datum to be presented to the UI looks like."
    },
    "apiListDataResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "string",
          "format": "int64",
          "description": "Total amount of data available."
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiGetDatumResponse"
          },
          "description": "The data returned following the request's restrictions."
        }
      }
    }
  }
}
