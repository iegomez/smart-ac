// Code generated by protoc-gen-go. DO NOT EDIT.
// source: datum.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetDatumResponse struct {
	// Datum ID.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Device ID.
	DeviceId       int64   `protobuf:"varint,2,opt,name=device_id,json=deviceID,proto3" json:"device_id,omitempty"`
	Temperature    float64 `protobuf:"fixed64,3,opt,name=temperature,proto3" json:"temperature,omitempty"`
	CarbonMonoxide float64 `protobuf:"fixed64,4,opt,name=carbon_monoxide,json=carbonMonoxide,proto3" json:"carbon_monoxide,omitempty"`
	AirHumidity    float64 `protobuf:"fixed64,5,opt,name=air_humidity,json=airHumidity,proto3" json:"air_humidity,omitempty"`
	HealthStatus   string  `protobuf:"bytes,6,opt,name=health_status,json=healthStatus,proto3" json:"health_status,omitempty"`
	// Created at timestamp.
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetDatumResponse) Reset()         { *m = GetDatumResponse{} }
func (m *GetDatumResponse) String() string { return proto.CompactTextString(m) }
func (*GetDatumResponse) ProtoMessage()    {}
func (*GetDatumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datum_8e9ed3e0c9dac353, []int{0}
}
func (m *GetDatumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDatumResponse.Unmarshal(m, b)
}
func (m *GetDatumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDatumResponse.Marshal(b, m, deterministic)
}
func (dst *GetDatumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDatumResponse.Merge(dst, src)
}
func (m *GetDatumResponse) XXX_Size() int {
	return xxx_messageInfo_GetDatumResponse.Size(m)
}
func (m *GetDatumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDatumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDatumResponse proto.InternalMessageInfo

func (m *GetDatumResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetDatumResponse) GetDeviceId() int64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *GetDatumResponse) GetTemperature() float64 {
	if m != nil {
		return m.Temperature
	}
	return 0
}

func (m *GetDatumResponse) GetCarbonMonoxide() float64 {
	if m != nil {
		return m.CarbonMonoxide
	}
	return 0
}

func (m *GetDatumResponse) GetAirHumidity() float64 {
	if m != nil {
		return m.AirHumidity
	}
	return 0
}

func (m *GetDatumResponse) GetHealthStatus() string {
	if m != nil {
		return m.HealthStatus
	}
	return ""
}

func (m *GetDatumResponse) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type Datum struct {
	// Device ID.
	DeviceId             int64    `protobuf:"varint,1,opt,name=device_id,json=deviceID,proto3" json:"device_id,omitempty"`
	Temperature          float64  `protobuf:"fixed64,2,opt,name=temperature,proto3" json:"temperature,omitempty"`
	CarbonMonoxide       float64  `protobuf:"fixed64,3,opt,name=carbon_monoxide,json=carbonMonoxide,proto3" json:"carbon_monoxide,omitempty"`
	AirHumidity          float64  `protobuf:"fixed64,4,opt,name=air_humidity,json=airHumidity,proto3" json:"air_humidity,omitempty"`
	HealthStatus         string   `protobuf:"bytes,5,opt,name=health_status,json=healthStatus,proto3" json:"health_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Datum) Reset()         { *m = Datum{} }
func (m *Datum) String() string { return proto.CompactTextString(m) }
func (*Datum) ProtoMessage()    {}
func (*Datum) Descriptor() ([]byte, []int) {
	return fileDescriptor_datum_8e9ed3e0c9dac353, []int{1}
}
func (m *Datum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Datum.Unmarshal(m, b)
}
func (m *Datum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Datum.Marshal(b, m, deterministic)
}
func (dst *Datum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Datum.Merge(dst, src)
}
func (m *Datum) XXX_Size() int {
	return xxx_messageInfo_Datum.Size(m)
}
func (m *Datum) XXX_DiscardUnknown() {
	xxx_messageInfo_Datum.DiscardUnknown(m)
}

var xxx_messageInfo_Datum proto.InternalMessageInfo

func (m *Datum) GetDeviceId() int64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *Datum) GetTemperature() float64 {
	if m != nil {
		return m.Temperature
	}
	return 0
}

func (m *Datum) GetCarbonMonoxide() float64 {
	if m != nil {
		return m.CarbonMonoxide
	}
	return 0
}

func (m *Datum) GetAirHumidity() float64 {
	if m != nil {
		return m.AirHumidity
	}
	return 0
}

func (m *Datum) GetHealthStatus() string {
	if m != nil {
		return m.HealthStatus
	}
	return ""
}

type CreateDataRequest struct {
	Data                 []*Datum `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateDataRequest) Reset()         { *m = CreateDataRequest{} }
func (m *CreateDataRequest) String() string { return proto.CompactTextString(m) }
func (*CreateDataRequest) ProtoMessage()    {}
func (*CreateDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datum_8e9ed3e0c9dac353, []int{2}
}
func (m *CreateDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDataRequest.Unmarshal(m, b)
}
func (m *CreateDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDataRequest.Marshal(b, m, deterministic)
}
func (dst *CreateDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDataRequest.Merge(dst, src)
}
func (m *CreateDataRequest) XXX_Size() int {
	return xxx_messageInfo_CreateDataRequest.Size(m)
}
func (m *CreateDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDataRequest proto.InternalMessageInfo

func (m *CreateDataRequest) GetData() []*Datum {
	if m != nil {
		return m.Data
	}
	return nil
}

type DatumRequest struct {
	// The datum's id.
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DatumRequest) Reset()         { *m = DatumRequest{} }
func (m *DatumRequest) String() string { return proto.CompactTextString(m) }
func (*DatumRequest) ProtoMessage()    {}
func (*DatumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datum_8e9ed3e0c9dac353, []int{3}
}
func (m *DatumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatumRequest.Unmarshal(m, b)
}
func (m *DatumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatumRequest.Marshal(b, m, deterministic)
}
func (dst *DatumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatumRequest.Merge(dst, src)
}
func (m *DatumRequest) XXX_Size() int {
	return xxx_messageInfo_DatumRequest.Size(m)
}
func (m *DatumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DatumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DatumRequest proto.InternalMessageInfo

func (m *DatumRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ListDataRequest struct {
	// Max amount of data to retrieve.
	Limit int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Offset for retrieving data.
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// Start date.
	StartDate *timestamp.Timestamp `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	// End date.
	EndDate              *timestamp.Timestamp `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListDataRequest) Reset()         { *m = ListDataRequest{} }
func (m *ListDataRequest) String() string { return proto.CompactTextString(m) }
func (*ListDataRequest) ProtoMessage()    {}
func (*ListDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datum_8e9ed3e0c9dac353, []int{4}
}
func (m *ListDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDataRequest.Unmarshal(m, b)
}
func (m *ListDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDataRequest.Marshal(b, m, deterministic)
}
func (dst *ListDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDataRequest.Merge(dst, src)
}
func (m *ListDataRequest) XXX_Size() int {
	return xxx_messageInfo_ListDataRequest.Size(m)
}
func (m *ListDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDataRequest proto.InternalMessageInfo

func (m *ListDataRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListDataRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListDataRequest) GetStartDate() *timestamp.Timestamp {
	if m != nil {
		return m.StartDate
	}
	return nil
}

func (m *ListDataRequest) GetEndDate() *timestamp.Timestamp {
	if m != nil {
		return m.EndDate
	}
	return nil
}

type ListDataForDeviceRequest struct {
	DeviceId int64 `protobuf:"varint,1,opt,name=device_id,json=deviceID,proto3" json:"device_id,omitempty"`
	// Max amount of data to retrieve.
	Limit int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// Offset for retrieving data.
	Offset int64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// Start date.
	StartDate *timestamp.Timestamp `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	// End date.
	EndDate              *timestamp.Timestamp `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListDataForDeviceRequest) Reset()         { *m = ListDataForDeviceRequest{} }
func (m *ListDataForDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*ListDataForDeviceRequest) ProtoMessage()    {}
func (*ListDataForDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datum_8e9ed3e0c9dac353, []int{5}
}
func (m *ListDataForDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDataForDeviceRequest.Unmarshal(m, b)
}
func (m *ListDataForDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDataForDeviceRequest.Marshal(b, m, deterministic)
}
func (dst *ListDataForDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDataForDeviceRequest.Merge(dst, src)
}
func (m *ListDataForDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_ListDataForDeviceRequest.Size(m)
}
func (m *ListDataForDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDataForDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDataForDeviceRequest proto.InternalMessageInfo

func (m *ListDataForDeviceRequest) GetDeviceId() int64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *ListDataForDeviceRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListDataForDeviceRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListDataForDeviceRequest) GetStartDate() *timestamp.Timestamp {
	if m != nil {
		return m.StartDate
	}
	return nil
}

func (m *ListDataForDeviceRequest) GetEndDate() *timestamp.Timestamp {
	if m != nil {
		return m.EndDate
	}
	return nil
}

type ListDataResponse struct {
	TotalCount           int64               `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Data                 []*GetDatumResponse `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ListDataResponse) Reset()         { *m = ListDataResponse{} }
func (m *ListDataResponse) String() string { return proto.CompactTextString(m) }
func (*ListDataResponse) ProtoMessage()    {}
func (*ListDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datum_8e9ed3e0c9dac353, []int{6}
}
func (m *ListDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDataResponse.Unmarshal(m, b)
}
func (m *ListDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDataResponse.Marshal(b, m, deterministic)
}
func (dst *ListDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDataResponse.Merge(dst, src)
}
func (m *ListDataResponse) XXX_Size() int {
	return xxx_messageInfo_ListDataResponse.Size(m)
}
func (m *ListDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDataResponse proto.InternalMessageInfo

func (m *ListDataResponse) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListDataResponse) GetData() []*GetDatumResponse {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*GetDatumResponse)(nil), "api.GetDatumResponse")
	proto.RegisterType((*Datum)(nil), "api.Datum")
	proto.RegisterType((*CreateDataRequest)(nil), "api.CreateDataRequest")
	proto.RegisterType((*DatumRequest)(nil), "api.DatumRequest")
	proto.RegisterType((*ListDataRequest)(nil), "api.ListDataRequest")
	proto.RegisterType((*ListDataForDeviceRequest)(nil), "api.ListDataForDeviceRequest")
	proto.RegisterType((*ListDataResponse)(nil), "api.ListDataResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DatumServiceClient is the client API for DatumService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DatumServiceClient interface {
	// Create creates the given datum.
	Create(ctx context.Context, in *CreateDataRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Get returns the datum matching the given id.
	Get(ctx context.Context, in *DatumRequest, opts ...grpc.CallOption) (*GetDatumResponse, error)
	// List returns the available data.
	List(ctx context.Context, in *ListDataRequest, opts ...grpc.CallOption) (*ListDataResponse, error)
	// ListForDevice returns the available data for a given device id.
	ListForDevice(ctx context.Context, in *ListDataForDeviceRequest, opts ...grpc.CallOption) (*ListDataResponse, error)
	// Delete deletes the datum matching the given id.
	Delete(ctx context.Context, in *DatumRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type datumServiceClient struct {
	cc *grpc.ClientConn
}

func NewDatumServiceClient(cc *grpc.ClientConn) DatumServiceClient {
	return &datumServiceClient{cc}
}

func (c *datumServiceClient) Create(ctx context.Context, in *CreateDataRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.DatumService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datumServiceClient) Get(ctx context.Context, in *DatumRequest, opts ...grpc.CallOption) (*GetDatumResponse, error) {
	out := new(GetDatumResponse)
	err := c.cc.Invoke(ctx, "/api.DatumService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datumServiceClient) List(ctx context.Context, in *ListDataRequest, opts ...grpc.CallOption) (*ListDataResponse, error) {
	out := new(ListDataResponse)
	err := c.cc.Invoke(ctx, "/api.DatumService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datumServiceClient) ListForDevice(ctx context.Context, in *ListDataForDeviceRequest, opts ...grpc.CallOption) (*ListDataResponse, error) {
	out := new(ListDataResponse)
	err := c.cc.Invoke(ctx, "/api.DatumService/ListForDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *datumServiceClient) Delete(ctx context.Context, in *DatumRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.DatumService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DatumServiceServer is the server API for DatumService service.
type DatumServiceServer interface {
	// Create creates the given datum.
	Create(context.Context, *CreateDataRequest) (*empty.Empty, error)
	// Get returns the datum matching the given id.
	Get(context.Context, *DatumRequest) (*GetDatumResponse, error)
	// List returns the available data.
	List(context.Context, *ListDataRequest) (*ListDataResponse, error)
	// ListForDevice returns the available data for a given device id.
	ListForDevice(context.Context, *ListDataForDeviceRequest) (*ListDataResponse, error)
	// Delete deletes the datum matching the given id.
	Delete(context.Context, *DatumRequest) (*empty.Empty, error)
}

func RegisterDatumServiceServer(s *grpc.Server, srv DatumServiceServer) {
	s.RegisterService(&_DatumService_serviceDesc, srv)
}

func _DatumService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatumServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DatumService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatumServiceServer).Create(ctx, req.(*CreateDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatumService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DatumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatumServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DatumService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatumServiceServer).Get(ctx, req.(*DatumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatumService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatumServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DatumService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatumServiceServer).List(ctx, req.(*ListDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatumService_ListForDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDataForDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatumServiceServer).ListForDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DatumService/ListForDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatumServiceServer).ListForDevice(ctx, req.(*ListDataForDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DatumService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DatumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatumServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DatumService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatumServiceServer).Delete(ctx, req.(*DatumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DatumService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.DatumService",
	HandlerType: (*DatumServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _DatumService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _DatumService_Get_Handler,
		},
		{
			MethodName: "List",
			Handler:    _DatumService_List_Handler,
		},
		{
			MethodName: "ListForDevice",
			Handler:    _DatumService_ListForDevice_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _DatumService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "datum.proto",
}

func init() { proto.RegisterFile("datum.proto", fileDescriptor_datum_8e9ed3e0c9dac353) }

var fileDescriptor_datum_8e9ed3e0c9dac353 = []byte{
	// 651 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xcd, 0x4e, 0xdb, 0x4c,
	0x14, 0x95, 0xed, 0x24, 0x90, 0x1b, 0x08, 0x30, 0xe2, 0x8b, 0xac, 0xf0, 0x01, 0xf9, 0xfc, 0xa9,
	0x6a, 0xca, 0x22, 0x91, 0x40, 0x5d, 0xb4, 0xbb, 0x8a, 0x14, 0x5a, 0xf5, 0x67, 0x11, 0xba, 0xae,
	0x35, 0x64, 0x2e, 0x30, 0x52, 0xec, 0x71, 0xed, 0xeb, 0xaa, 0x08, 0xb1, 0xe9, 0xbe, 0xab, 0xbe,
	0x45, 0x77, 0x5d, 0xf5, 0x41, 0xba, 0xe8, 0x0b, 0xf4, 0x41, 0x2a, 0xcf, 0x4c, 0x02, 0x98, 0xbf,
	0xa8, 0xcb, 0x39, 0x3e, 0xf7, 0x78, 0xce, 0xb9, 0xc7, 0x86, 0x86, 0xe0, 0x94, 0x47, 0xbd, 0x24,
	0x55, 0xa4, 0x98, 0xc7, 0x13, 0xd9, 0xfe, 0xf7, 0x58, 0xa9, 0xe3, 0x31, 0xf6, 0x79, 0x22, 0xfb,
	0x3c, 0x8e, 0x15, 0x71, 0x92, 0x2a, 0xce, 0x0c, 0xa5, 0xbd, 0x69, 0x9f, 0xea, 0xd3, 0x61, 0x7e,
	0xd4, 0x27, 0x19, 0x61, 0x46, 0x3c, 0x4a, 0x2c, 0x61, 0xad, 0x4c, 0xc0, 0x28, 0xa1, 0x53, 0xf3,
	0x30, 0xf8, 0xe2, 0xc2, 0xf2, 0x3e, 0xd2, 0xa0, 0x78, 0xe7, 0x10, 0xb3, 0x44, 0xc5, 0x19, 0xb2,
	0x26, 0xb8, 0x52, 0xf8, 0x4e, 0xc7, 0xe9, 0x7a, 0x43, 0x57, 0x0a, 0xb6, 0x06, 0x75, 0x81, 0x1f,
	0xe5, 0x08, 0x43, 0x29, 0x7c, 0x57, 0xc3, 0xf3, 0x06, 0x78, 0x39, 0x60, 0x1d, 0x68, 0x10, 0x46,
	0x09, 0xa6, 0x9c, 0xf2, 0x14, 0x7d, 0xaf, 0xe3, 0x74, 0x9d, 0xe1, 0x65, 0x88, 0x3d, 0x84, 0xa5,
	0x11, 0x4f, 0x0f, 0x55, 0x1c, 0x46, 0x2a, 0x56, 0x9f, 0xa4, 0x40, 0xbf, 0xa2, 0x59, 0x4d, 0x03,
	0xbf, 0xb1, 0x28, 0xfb, 0x0f, 0x16, 0xb8, 0x4c, 0xc3, 0x93, 0x3c, 0x92, 0x42, 0xd2, 0xa9, 0x5f,
	0x35, 0x5a, 0x5c, 0xa6, 0x2f, 0x2c, 0xc4, 0xfe, 0x87, 0xc5, 0x13, 0xe4, 0x63, 0x3a, 0x09, 0x33,
	0xe2, 0x94, 0x67, 0x7e, 0xad, 0xe3, 0x74, 0xeb, 0xc3, 0x05, 0x03, 0x1e, 0x68, 0x8c, 0x3d, 0x01,
	0x18, 0xa5, 0xc8, 0x09, 0x45, 0xc8, 0xc9, 0x9f, 0xeb, 0x38, 0xdd, 0xc6, 0x76, 0xbb, 0x67, 0x62,
	0xe8, 0x4d, 0x62, 0xe8, 0xbd, 0x9b, 0xe4, 0x34, 0xac, 0x5b, 0xf6, 0x33, 0x0a, 0x7e, 0x38, 0x50,
	0xd5, 0x61, 0x5c, 0x35, 0xed, 0xdc, 0x6d, 0xda, 0x9d, 0xc9, 0xb4, 0x37, 0x93, 0xe9, 0xca, 0x0c,
	0xa6, 0xab, 0xd7, 0x4d, 0x07, 0x3b, 0xb0, 0xb2, 0xab, 0x6d, 0x0c, 0x38, 0xf1, 0x21, 0x7e, 0xc8,
	0x31, 0x23, 0xb6, 0x01, 0x15, 0xc1, 0x89, 0xfb, 0x4e, 0xc7, 0xeb, 0x36, 0xb6, 0xa1, 0xc7, 0x13,
	0xd9, 0x33, 0xbb, 0xd6, 0x78, 0xb0, 0x01, 0x0b, 0x76, 0xf5, 0x86, 0x5f, 0xda, 0x7c, 0xf0, 0xdd,
	0x81, 0xa5, 0xd7, 0x32, 0xa3, 0xcb, 0x9a, 0xab, 0x50, 0x1d, 0xcb, 0x48, 0x92, 0xa5, 0x99, 0x03,
	0x6b, 0x41, 0x4d, 0x1d, 0x1d, 0x65, 0x48, 0xb6, 0x20, 0xf6, 0x54, 0xec, 0x22, 0x23, 0x9e, 0x52,
	0x28, 0x38, 0x99, 0x08, 0xee, 0xd9, 0x85, 0x66, 0x0f, 0x38, 0x21, 0x7b, 0x0c, 0xf3, 0x18, 0x0b,
	0x33, 0x58, 0xb9, 0x77, 0x70, 0x0e, 0x63, 0x51, 0x8c, 0x05, 0xbf, 0x1c, 0xf0, 0x27, 0x77, 0xde,
	0x53, 0xe9, 0x40, 0xef, 0x6c, 0x72, 0xf9, 0x3b, 0xb7, 0x3a, 0x75, 0xe6, 0xde, 0xec, 0xcc, 0xbb,
	0xc3, 0x59, 0xe5, 0x6f, 0x9d, 0x55, 0x67, 0x77, 0xf6, 0x1e, 0x96, 0x2f, 0x96, 0x61, 0xbf, 0xd5,
	0x4d, 0x68, 0x90, 0x22, 0x3e, 0x0e, 0x47, 0x2a, 0x8f, 0x27, 0x3b, 0x01, 0x0d, 0xed, 0x16, 0x08,
	0x7b, 0x64, 0x2b, 0xe0, 0xea, 0x0a, 0xfc, 0xa3, 0x2b, 0x50, 0xfe, 0xe2, 0x4d, 0x1b, 0xb6, 0xbf,
	0x79, 0xb6, 0x0e, 0x07, 0x98, 0x16, 0x91, 0xb0, 0xb7, 0x50, 0x33, 0x9d, 0x62, 0x2d, 0x3d, 0x77,
	0xad, 0x60, 0xed, 0xd6, 0xb5, 0x7b, 0x3f, 0x2f, 0xfe, 0x2e, 0xc1, 0xea, 0xe7, 0x9f, 0xbf, 0xbf,
	0xba, 0xcd, 0xa0, 0xae, 0xff, 0x5a, 0x85, 0xfa, 0x53, 0x67, 0x8b, 0xed, 0x83, 0xb7, 0x8f, 0xc4,
	0x56, 0x2e, 0xf5, 0xd0, 0xea, 0xdc, 0x7c, 0xaf, 0xa0, 0xa5, 0x65, 0x96, 0x59, 0x73, 0x2a, 0xd3,
	0x3f, 0x93, 0xe2, 0x9c, 0xed, 0x41, 0xa5, 0x48, 0x82, 0xad, 0xea, 0xb1, 0x52, 0x43, 0xad, 0x58,
	0x39, 0xaa, 0x60, 0x45, 0x8b, 0x35, 0xd8, 0xc5, 0x9d, 0xd8, 0x18, 0x16, 0x0b, 0xda, 0xb4, 0x26,
	0x6c, 0xfd, 0xca, 0x68, 0xb9, 0x3e, 0xb7, 0x29, 0x3f, 0xd0, 0xca, 0x9b, 0x6c, 0xdd, 0x28, 0xeb,
	0x91, 0xac, 0x7f, 0x36, 0x6d, 0xda, 0xb9, 0x79, 0xdb, 0x2b, 0xa8, 0x0d, 0x70, 0x8c, 0x84, 0x37,
	0x25, 0x70, 0x5b, 0x92, 0x36, 0x82, 0xad, 0x52, 0x04, 0x87, 0x35, 0xcd, 0xdb, 0xf9, 0x13, 0x00,
	0x00, 0xff, 0xff, 0x56, 0x89, 0x2e, 0x4d, 0x30, 0x06, 0x00, 0x00,
}
